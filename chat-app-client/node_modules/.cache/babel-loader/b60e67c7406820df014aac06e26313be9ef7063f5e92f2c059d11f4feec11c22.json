{"ast":null,"code":"var _jsxFileName = \"/Users/kobepane/Documents/CIT 382/chat-app/chat-app-client/src/chat.js\",\n  _s = $RefreshSig$();\n/*\nChat component for the chat application\n*/\n\nimport \"./chat.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport Example from \"./piechart\";\nimport React, { useState, useEffect } from \"react\";\n\n// Websocket imports\nimport { io } from \"socket.io-client\";\n\n/*\nNeed to open up a websocket server for users on a url and port\nwhen a message is received on the websocket, we need an event handler to add that message to the messages state variable \nand then be mapped onto the front end \nwhen the send button is clicked, we need an event handler to send that message which is kept in a state variable through the \nwebsocket, and then clear the state variable\n*/\n\n// const socket = io(\"http://localhost:3001\");\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat(props) {\n  _s();\n  const {\n    username,\n    country,\n    chat,\n    example_users\n  } = props;\n  const navigate = useNavigate();\n\n  // State Variables for message in text box and messages array\n  const [message, setMessage] = useState(\"\");\n  const [chatMessages, setChatMessages] = useState([]);\n  const socket = io(\"http://localhost:3001\");\n\n  // Control the message state variable\n  function handleTextChange(e) {\n    setMessage(e.target.value);\n  }\n\n  // Handle button click, and send message data to server\n  function sendMessage() {\n    socket.emit(\"message-to-server\", message);\n    setMessage(\"\");\n  }\n\n  // Handle enter/return clicked by user in the text area to send message to server\n  function handleEnterKeyPress(e) {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  }\n\n  // Initialize the connection, and listen for for messages from the server\n  useEffect(() => {\n    socket.on(\"connect\", () => {\n      socket.on(\"message-to-client\", data => {\n        console.log(data);\n        setChatMessages(prevChatMessages => [...prevChatMessages, data]);\n      });\n\n      // socket.emit(\"msg\", \"Message from Client\");\n    });\n    return () => {\n      socket.off(\"connect\");\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item users\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-list-parent\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"users-header\",\n            children: [\"Users(\", example_users.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"users-list\",\n            children: example_users.map(user => {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                children: user.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 24\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"leave-button\",\n          onClick: () => {\n            navigate(\"/\");\n          },\n          children: \"Leave Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item chat\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header item\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Chat Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages item\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Hello there!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-textbox item\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: message,\n            placeholder: \"Type a message...\",\n            className: \"chat-inputbox item\",\n            onChange: handleTextChange,\n            onKeyDown: handleEnterKeyPress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"send-button-div\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"send-button\",\n              onClick: sendMessage,\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item chart\",\n        children: /*#__PURE__*/_jsxDEV(Example, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"geuoot/KenjKK7oTYjZwMg0Frsc=\", false, function () {\n  return [useNavigate];\n});\n_c = Chat;\nexport { Chat };\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useNavigate","Example","React","useState","useEffect","io","jsxDEV","_jsxDEV","Chat","props","_s","username","country","chat","example_users","navigate","message","setMessage","chatMessages","setChatMessages","socket","handleTextChange","e","target","value","sendMessage","emit","handleEnterKeyPress","key","shiftKey","preventDefault","on","data","console","log","prevChatMessages","off","children","className","length","fileName","_jsxFileName","lineNumber","columnNumber","map","user","id","onClick","placeholder","onChange","onKeyDown","_c","$RefreshReg$"],"sources":["/Users/kobepane/Documents/CIT 382/chat-app/chat-app-client/src/chat.js"],"sourcesContent":["/*\nChat component for the chat application\n*/\n\nimport \"./chat.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport Example from \"./piechart\";\nimport React, { useState, useEffect } from \"react\";\n\n// Websocket imports\nimport { io } from \"socket.io-client\";\n\n/*\nNeed to open up a websocket server for users on a url and port\nwhen a message is received on the websocket, we need an event handler to add that message to the messages state variable \nand then be mapped onto the front end \nwhen the send button is clicked, we need an event handler to send that message which is kept in a state variable through the \nwebsocket, and then clear the state variable\n*/\n\n// const socket = io(\"http://localhost:3001\");\n\nfunction Chat(props) {\n  const { username, country, chat, example_users } = props;\n\n  const navigate = useNavigate();\n\n  // State Variables for message in text box and messages array\n  const [message, setMessage] = useState(\"\");\n  const [chatMessages, setChatMessages] = useState([]);\n\n  const socket = io(\"http://localhost:3001\");\n\n  // Control the message state variable\n  function handleTextChange(e) {\n    setMessage(e.target.value);\n  }\n\n  // Handle button click, and send message data to server\n  function sendMessage() {\n    socket.emit(\"message-to-server\", message);\n    setMessage(\"\");\n  }\n\n  // Handle enter/return clicked by user in the text area to send message to server\n  function handleEnterKeyPress(e) {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  }\n\n  // Initialize the connection, and listen for for messages from the server\n  useEffect(() => {\n    socket.on(\"connect\", () => {\n      socket.on(\"message-to-client\", (data) => {\n        console.log(data);\n        setChatMessages((prevChatMessages) => [...prevChatMessages, data]);\n      });\n\n      // socket.emit(\"msg\", \"Message from Client\");\n    });\n\n    return () => {\n      socket.off(\"connect\");\n    };\n  }, []);\n\n  return (\n    <div>\n      <div className=\"container\">\n        <div className=\"item users\">\n          <div className=\"user-list-parent\">\n            <h2 className=\"users-header\">Users({example_users.length})</h2>\n            <div className=\"users-list\">\n              {example_users.map((user) => {\n                return <p>{user.username}</p>;\n              })}\n            </div>\n          </div>\n          <button\n            id=\"leave-button\"\n            onClick={() => {\n              navigate(\"/\");\n            }}\n          >\n            Leave Chat\n          </button>\n        </div>\n        <div className=\"item chat\">\n          <div className=\"chat-header item\">\n            <h2>Chat Name</h2>\n          </div>\n          <div className=\"chat-messages item\">\n            {/*\n            {chatMessages.map((message, index) => {\n              return <p key={index}>{message}</p>;\n            })}\n          */}\n            <p>Hello there!</p>\n          </div>\n          <div className=\"chat-textbox item\">\n            <textarea\n              value={message}\n              placeholder=\"Type a message...\"\n              className=\"chat-inputbox item\"\n              onChange={handleTextChange}\n              onKeyDown={handleEnterKeyPress}\n            />\n            <div className=\"send-button-div\">\n              <button id=\"send-button\" onClick={sendMessage}>\n                Send\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"item chart\">\n          <Example />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport { Chat };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}